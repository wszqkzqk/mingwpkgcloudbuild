# Maintainer: Zhou Qiankang <wszqkzqk@qq.com>

_realname=live-photo-conv
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=0.3.12
pkgrel=1
pkgdesc="A cross-platform tool to process live photos of Google Android"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clangarm64')
url="https://github.com/wszqkzqk/${_realname}"
license=('spdx:LGPL-2.1-or-later')
depends=(
    "${MINGW_PACKAGE_PREFIX}-glib2"
    "${MINGW_PACKAGE_PREFIX}-gexiv2"
    "${MINGW_PACKAGE_PREFIX}-gstreamer"
    "${MINGW_PACKAGE_PREFIX}-gst-plugins-base"
    "${MINGW_PACKAGE_PREFIX}-gst-plugins-good"
    "${MINGW_PACKAGE_PREFIX}-gst-plugins-bad"
    "${MINGW_PACKAGE_PREFIX}-gdk-pixbuf2"
)
makedepends=(
    "git"
    "help2man"
    "${MINGW_PACKAGE_PREFIX}-cc"
    "${MINGW_PACKAGE_PREFIX}-vala"
    "${MINGW_PACKAGE_PREFIX}-meson"
    "${MINGW_PACKAGE_PREFIX}-gobject-introspection"
)
optdepends=(
    "${MINGW_PACKAGE_PREFIX}-ffmpeg: FFmpeg backend to convert internal video of a live photo to static pictures"
    "${MINGW_PACKAGE_PREFIX}-libavif: Support to save as .avif with GStreamer and GdkPixbuf backend"
    "${MINGW_PACKAGE_PREFIX}-libheif: Support to save photos as .heif, .heic, and .avif with GStreamer and GdkPixbuf backend"
    "${MINGW_PACKAGE_PREFIX}-libjxl: Support to save photos as .jxl with GStreamer and GdkPixbuf backend"
    "${MINGW_PACKAGE_PREFIX}-webp-pixbuf-loader: Support to save photos as .webp with GStreamer and GdkPixbuf backend"
)
source=("git+https://github.com/wszqkzqk/${_realname}.git#tag=${pkgver}")
sha256sums=('588bfc6d99f59a1fb3dda41ffa871446bd9639a53e406101e8f18a2dd2a41e42')

build() {
  mkdir -p "${srcdir}/build-${MSYSTEM}" && cd "${srcdir}/build-${MSYSTEM}"

  declare -a _extra_config
  if check_option "debug" "n"; then
    _extra_config+=("--buildtype=release")
  else
    _extra_config+=("--buildtype=debug")
  fi

  MSYS2_ARG_CONV_EXCL="--prefix=" \
  ${MINGW_PREFIX}/bin/meson.exe setup \
    --prefix="${MINGW_PREFIX}" \
    "${_extra_config[@]}" \
    --wrap-mode=nodownload \
    --default-library=both \
    ../${_realname}

  ${MINGW_PREFIX}/bin/meson.exe compile
}

package() {
  cd "${srcdir}/build-${MSYSTEM}"
  DESTDIR="${pkgdir}" ${MINGW_PREFIX}/bin/meson.exe install
  install -Dm644 "${srcdir}/${_realname}/COPYING" "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/COPYING"
}
